#!/usr/bin/env python
''' Check Sonifex Play metrics (only buffer and bitrate implemented yet)'''

import nagiosplugin
import argparse
import urllib2
import re

status_file = 'realtime_status.txt'
__version__ = '0.0.1'


@nagiosplugin.guarded
class Sonifex(nagiosplugin. Resource):
    def __init__(self, hostname):
        self.hostname = hostname

    def probe(self):
        # Get realtime status data from device, strip stuff & put into list
        url = 'http://' + self.hostname + '/' + status_file
        response = urllib2.urlopen(url).read()
        stripped = re.sub('\r\n', '', response)
        stripped = re.sub('<[^>]+>', '', stripped)[1:-1]
        data = stripped.split(';')

        print data
        yield nagiosplugin.Metric('buffer', data[9])
        yield nagiosplugin.Metric('bitrate', data[8])


def main():
    argp = argparse.ArgumentParser(description=__doc__)

    argp.add_argument('-V', '--version', action='version',
                      version=' '.join(['%(prog)s', __version__]))
    argp.add_argument('-H', '--hostname', metavar='NAME', required=True,
                      help='Hostname or IP address of the Sonifex device')

    argp.add_argument('--wbuffer', metavar='RANGE', default='',
                      help='Return warn. if Buffer is outside RANGE')
    argp.add_argument('--cbuffer', metavar='RANGE', default='',
                      help='Return crit. if Buffer is outside RANGE')
    argp.add_argument('--wbitrate', metavar='RANGE', default='',
                      help='Return warn. if bitrate is outside RANGE')
    argp.add_argument('--cbitrate', metavar='RANGE', default='',
                      help='Return crit. if bitrate is outside RANGE')

    args = argp.parse_args()
    check = nagiosplugin.Check(
        Sonifex(args.hostname),
        nagiosplugin.ScalarContext('buffer', args.wbuffer, args.cbuffer),
        nagiosplugin.ScalarContext('bitrate', args.wbuffer, args.cbuffer))
    return check.main()

if __name__ == '__main__':
    main()
